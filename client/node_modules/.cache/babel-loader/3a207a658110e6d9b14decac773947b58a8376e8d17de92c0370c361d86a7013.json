{"ast":null,"code":"var _jsxFileName = \"/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/PostsWidget.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state/index\";\nimport PostWidget from \"../widgets/PostWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsWidget = ({\n  userId,\n  isProfile = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n\n  // GET ALL POSTS FOR HOMEPAGE\n  const getPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts`, {\n      method: \"GET\",\n      header: {\n        Authorization: `Bearer ${token}`\n      } //authentication\n    });\n\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    })); //remember the post array is set as \"Action.payload.posts\"\n  };\n\n  // GET PROFILE POSTS ONLY\n  const getUserPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts/${userId}/posts`, {\n      method: \"GET\",\n      header: {\n        Authorization: `Bearer ${token}`\n      } //authentication\n    });\n\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    })); //remember the post array is set as \"Action.payload.posts\"\n  };\n\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, [isProfile]); //eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(({\n      _id,\n      userId,\n      firstName,\n      lastName,\n      description,\n      location,\n      picturePath,\n      userPicturePath,\n      likes,\n      comments\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [_id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n_s(PostsWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setPosts","PostWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsWidget","userId","isProfile","_s","dispatch","posts","state","token","getPosts","response","fetch","method","header","Authorization","data","json","getUserPosts","children","map","_id","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/PostsWidget.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state/index\";\nimport PostWidget from \"../widgets/PostWidget\";\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const token = useSelector((state) => state.token);\n\n  // GET ALL POSTS FOR HOMEPAGE\n  const getPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts`, {\n      method: \"GET\",\n      header: { Authorization: `Bearer ${token}` }, //authentication\n    });\n    const data = await response.json();\n    dispatch(setPosts({ posts: data })); //remember the post array is set as \"Action.payload.posts\"\n  };\n\n  // GET PROFILE POSTS ONLY\n  const getUserPosts = async () => {\n    const response = await fetch(\n      `http://localhost:3001/posts/${userId}/posts`,\n      {\n        method: \"GET\",\n        header: { Authorization: `Bearer ${token}` }, //authentication\n      }\n    );\n    const data = await response.json();\n    dispatch(setPosts({ posts: data })); //remember the post array is set as \"Action.payload.posts\"\n  };\n\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, [isProfile]); //eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {posts.map(\n        ({\n          _id,\n          userId,\n          firstName,\n          lastName,\n          description,\n          location,\n          picturePath,\n          userPicturePath,\n          likes,\n          comments,\n        }) => (\n          <div>{_id} </div>\n        )\n      )}\n    </>\n  );\n};\n\nexport default PostsWidget;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,UAAU,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,KAAK,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAME,KAAK,GAAGd,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;;EAEjD;EACA,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4B,EAAE;MAC1DC,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE;QAAEC,aAAa,EAAG,UAASN,KAAM;MAAE,CAAC,CAAE;IAChD,CAAC,CAAC;;IACF,MAAMO,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCX,QAAQ,CAACV,QAAQ,CAAC;MAAEW,KAAK,EAAES;IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CACzB,+BAA8BT,MAAO,QAAO,EAC7C;MACEU,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE;QAAEC,aAAa,EAAG,UAASN,KAAM;MAAE,CAAC,CAAE;IAChD,CACF,CAAC;;IACD,MAAMO,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCX,QAAQ,CAACV,QAAQ,CAAC;MAAEW,KAAK,EAAES;IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;;EAEDvB,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,EAAE;MACbc,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLR,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBACEL,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EACGZ,KAAK,CAACa,GAAG,CACR,CAAC;MACCC,GAAG;MACHlB,MAAM;MACNmB,SAAS;MACTC,QAAQ;MACRC,WAAW;MACXC,QAAQ;MACRC,WAAW;MACXC,eAAe;MACfC,KAAK;MACLC;IACF,CAAC,kBACC9B,OAAA;MAAAoB,QAAA,GAAME,GAAG,EAAC,GAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAEpB;EAAC,gBACD,CAAC;AAEP,CAAC;AAAC5B,EAAA,CAxDIH,WAAW;EAAA,QACER,WAAW,EACdC,WAAW,EACXA,WAAW;AAAA;AAAAuC,EAAA,GAHrBhC,WAAW;AA0DjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}