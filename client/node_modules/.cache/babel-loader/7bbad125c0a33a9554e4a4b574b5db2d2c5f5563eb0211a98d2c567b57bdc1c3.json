{"ast":null,"code":"var _jsxFileName = \"/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/PostWidget.jsx\",\n  _s = $RefreshSig$();\nimport FlexBetween from \"../../components/FlexBetween\";\nimport React from \"react\";\nimport { ChatBubbleOutlineOutlined, favoriteBorderOutlined, FavoriteOulined, ShareOutlined } from \"@mui/icons-material\";\nimport { Box, Divider, IconButton, Typography, useTheme } from \"@mui/material\";\nimport Friend from \"../../components/Friend.jsx\";\nimport WidgetWrapper from \"../../components/WidgetWrapper\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPost } from \"../../state/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostWidget = ({\n  postId,\n  name,\n  description,\n  location,\n  picturePath,\n  userPicturePath,\n  likes,\n  comments\n}) => {\n  _s();\n  const [isComments, setIsComments] = useState(false); //BOOLEAN: if user opened comments\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.token);\n  const loggedInUserId = useSelector(state => state.user._id);\n  const isLiked = Boolean(likes[loggedInUserId]); //REMINDER: on backend in models/post, we set 'likes' as an array of users with a boolean of true or false. This 'isLiked' boolean SEARCHES through the 'likes' array to find the 'loggedInUserId' boolean.\n  const likeCount = Object.keys(likes).length; //'Object.keys' is a static method --> RETURNS an array of a given object's own string-keyed property names for info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n  const {\n    palette\n  } = useTheme();\n  const main = palette.neutral.main;\n  const primary = palette.primary.main;\n  const patchLike = async () => {\n    // UPDATE THE POST\n    const response = await fetch(`http://localhost:3001/posts/${postId}/like`, {\n      method: \"PATCH\",\n      //PATCH = partial modifications to a resource, more info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\" //authentication\n      },\n\n      body: JSON.stringify({\n        userId: loggedInUserId\n      }) //sending to backend this user's info BOOLEAN. Can keep track of if user liked this post\n    });\n\n    // RETURN THE UPDATED POST\n    const updatedPost = await response.json();\n\n    // REPLACE OLD POST\n    dispatch(setPost({\n      updatedPost\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(FlexBetween, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(PostWidget, \"IOTKyMByat0DmJlZ1a5sXZUx3zU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useTheme];\n});\n_c = PostWidget;\nexport default PostWidget;\nvar _c;\n$RefreshReg$(_c, \"PostWidget\");","map":{"version":3,"names":["FlexBetween","React","ChatBubbleOutlineOutlined","favoriteBorderOutlined","FavoriteOulined","ShareOutlined","Box","Divider","IconButton","Typography","useTheme","Friend","WidgetWrapper","useState","useDispatch","useSelector","setPost","jsxDEV","_jsxDEV","PostWidget","postId","name","description","location","picturePath","userPicturePath","likes","comments","_s","isComments","setIsComments","dispatch","token","state","loggedInUserId","user","_id","isLiked","Boolean","likeCount","Object","keys","length","palette","main","neutral","primary","patchLike","response","fetch","method","headers","Authorization","body","JSON","stringify","userId","updatedPost","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/PostWidget.jsx"],"sourcesContent":["import FlexBetween from \"../../components/FlexBetween\";\nimport React from \"react\";\nimport {\n  ChatBubbleOutlineOutlined,\n  favoriteBorderOutlined,\n  FavoriteOulined,\n  ShareOutlined,\n} from \"@mui/icons-material\";\nimport { Box, Divider, IconButton, Typography, useTheme } from \"@mui/material\";\nimport Friend from \"../../components/Friend.jsx\";\nimport WidgetWrapper from \"../../components/WidgetWrapper\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPost } from \"../../state/index\";\n\nconst PostWidget = ({\n  postId,\n  name,\n  description,\n  location,\n  picturePath,\n  userPicturePath,\n  likes,\n  comments,\n}) => {\n  const [isComments, setIsComments] = useState(false); //BOOLEAN: if user opened comments\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token);\n  const loggedInUserId = useSelector((state) => state.user._id);\n  const isLiked = Boolean(likes[loggedInUserId]); //REMINDER: on backend in models/post, we set 'likes' as an array of users with a boolean of true or false. This 'isLiked' boolean SEARCHES through the 'likes' array to find the 'loggedInUserId' boolean.\n  const likeCount = Object.keys(likes).length; //'Object.keys' is a static method --> RETURNS an array of a given object's own string-keyed property names for info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n  const { palette } = useTheme();\n  const main = palette.neutral.main;\n  const primary = palette.primary.main;\n\n  const patchLike = async () => {\n    // UPDATE THE POST\n    const response = await fetch(`http://localhost:3001/posts/${postId}/like`, {\n      method: \"PATCH\", //PATCH = partial modifications to a resource, more info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\", //authentication\n      },\n      body: JSON.stringify({ userId: loggedInUserId }), //sending to backend this user's info BOOLEAN. Can keep track of if user liked this post\n    });\n\n    // RETURN THE UPDATED POST\n    const updatedPost = await response.json();\n\n    // REPLACE OLD POST\n    dispatch(setPost({ updatedPost }));\n  };\n\n  return (\n    <FlexBetween>\n      <Typography>{name}</Typography>\n    </FlexBetween>\n  );\n};\n\nexport default PostWidget;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,8BAA8B;AACtD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,yBAAyB,EACzBC,sBAAsB,EACtBC,eAAe,EACfC,aAAa,QACR,qBAAqB;AAC5B,SAASC,GAAG,EAAEC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,eAAe;AAC9E,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAC;EAClBC,MAAM;EACNC,IAAI;EACJC,WAAW;EACXC,QAAQ;EACRC,WAAW;EACXC,eAAe;EACfC,KAAK;EACLC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,KAAK,GAAGjB,WAAW,CAAEkB,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAME,cAAc,GAAGnB,WAAW,CAAEkB,KAAK,IAAKA,KAAK,CAACE,IAAI,CAACC,GAAG,CAAC;EAC7D,MAAMC,OAAO,GAAGC,OAAO,CAACZ,KAAK,CAACQ,cAAc,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMK,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACf,KAAK,CAAC,CAACgB,MAAM,CAAC,CAAC;;EAE7C,MAAM;IAAEC;EAAQ,CAAC,GAAGjC,QAAQ,CAAC,CAAC;EAC9B,MAAMkC,IAAI,GAAGD,OAAO,CAACE,OAAO,CAACD,IAAI;EACjC,MAAME,OAAO,GAAGH,OAAO,CAACG,OAAO,CAACF,IAAI;EAEpC,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B7B,MAAO,OAAM,EAAE;MACzE8B,MAAM,EAAE,OAAO;MAAE;MACjBC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASpB,KAAM,EAAC;QAChC,cAAc,EAAE,kBAAkB,CAAE;MACtC,CAAC;;MACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAEtB;MAAe,CAAC,CAAC,CAAE;IACpD,CAAC,CAAC;;IAEF;IACA,MAAMuB,WAAW,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;;IAEzC;IACA3B,QAAQ,CAACf,OAAO,CAAC;MAAEyC;IAAY,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACEvC,OAAA,CAAClB,WAAW;IAAA2D,QAAA,eACVzC,OAAA,CAACT,UAAU;MAAAkD,QAAA,EAAEtC;IAAI;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAElB,CAAC;AAACnC,EAAA,CA5CIT,UAAU;EAAA,QAWGL,WAAW,EACdC,WAAW,EACFA,WAAW,EAIdL,QAAQ;AAAA;AAAAsD,EAAA,GAjBxB7C,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}