{"ast":null,"code":"var _jsxFileName = \"/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/PostsWidget.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state/index\";\nimport PostWidget from \"../widgets/PostWidget\";\nimport { Button, Typography } from \"@mui/material\";\nimport FlexBetween from \"../../components/FlexBetween\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsWidget = ({\n  userId,\n  isProfile = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n  // console.log(posts);\n\n  // GET ALL POSTS FOR HOMEPAGE\n  const getPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      } //authentication\n    });\n\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    })); //remember the post array is set as \"Action.payload.posts\"\n  };\n\n  // GET PROFILE POSTS ONLY\n  const getUserPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts/${userId}/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      } //authentication\n    });\n\n    const data = await response.json();\n    console.log(data);\n    dispatch(setPosts({\n      posts: data\n    })); //remember the post array is set as \"Action.payload.posts\"\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n      /* you can also use 'auto' behaviour\n         in place of 'smooth' */\n    });\n  };\n\n  useEffect(() => {\n    if (isProfile) {\n      console.log(\"its started\");\n      getUserPosts();\n    } else {\n      console.log(\"its started\");\n      getPosts();\n    }\n  }, []); //eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column-reverse\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(FlexBetween, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n      // height=\"10rem\"\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Looks like you've reached the end!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: scrollToTop,\n        children: \" BACK TO TOP \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), posts.map(({\n      _id,\n      userId,\n      firstName,\n      lastName,\n      description,\n      location,\n      picturePath,\n      userPicturePath,\n      likes,\n      comments\n    }) => /*#__PURE__*/_jsxDEV(PostWidget, {\n      postId: _id,\n      postUserId: userId,\n      name: `${firstName} ${lastName}`,\n      description: description,\n      location: location,\n      picturePath: picturePath,\n      userPicturePath: userPicturePath,\n      likes: likes,\n      comments: comments\n    }, _id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setPosts","PostWidget","Button","Typography","FlexBetween","jsxDEV","_jsxDEV","PostsWidget","userId","isProfile","_s","dispatch","posts","state","token","getPosts","response","fetch","method","headers","Authorization","data","json","getUserPosts","console","log","scrollToTop","window","scrollTo","top","behavior","style","display","flexDirection","children","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_id","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","postId","postUserId","name","_c","$RefreshReg$"],"sources":["/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/PostsWidget.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state/index\";\nimport PostWidget from \"../widgets/PostWidget\";\nimport { Button, Typography } from \"@mui/material\";\nimport FlexBetween from \"../../components/FlexBetween\";\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const token = useSelector((state) => state.token);\n  // console.log(posts);\n\n  // GET ALL POSTS FOR HOMEPAGE\n  const getPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts`, {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` }, //authentication\n    });\n    const data = await response.json();\n    dispatch(setPosts({ posts: data })); //remember the post array is set as \"Action.payload.posts\"\n  };\n\n  // GET PROFILE POSTS ONLY\n  const getUserPosts = async () => {\n    const response = await fetch(\n      `http://localhost:3001/posts/${userId}/posts`,\n      {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` }, //authentication\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    dispatch(setPosts({ posts: data })); //remember the post array is set as \"Action.payload.posts\"\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n      /* you can also use 'auto' behaviour\n         in place of 'smooth' */\n    });\n  };\n\n  useEffect(() => {\n    if (isProfile) {\n      console.log(\"its started\");\n      getUserPosts();\n    } else {\n      console.log(\"its started\");\n      getPosts();\n    }\n  }, []); //eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column-reverse\" }}>\n      <FlexBetween\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        // height=\"10rem\"\n      >\n        <Typography>Looks like you've reached the end!</Typography>\n        <Button onClick={scrollToTop}> BACK TO TOP </Button>\n      </FlexBetween>\n      {posts.map(\n        ({\n          _id,\n          userId,\n          firstName,\n          lastName,\n          description,\n          location,\n          picturePath,\n          userPicturePath,\n          likes,\n          comments,\n        }) => (\n          <PostWidget\n            key={_id}\n            postId={_id}\n            postUserId={userId}\n            name={`${firstName} ${lastName}`}\n            description={description}\n            location={location}\n            picturePath={picturePath}\n            userPicturePath={userPicturePath}\n            likes={likes}\n            comments={comments}\n          />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default PostsWidget;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}