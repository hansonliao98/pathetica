{"ast":null,"code":"var _jsxFileName = \"/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/PostWidget.jsx\",\n  _s = $RefreshSig$();\nimport FlexBetween from \"../../components/FlexBetween\";\nimport React from \"react\";\nimport { ChatBubbleOutlineOutlined, FavoriteBorderOutlined, FavoriteOutlined, ShareOutlined } from \"@mui/icons-material\";\nimport { Box, Divider, IconButton, Typography, useTheme } from \"@mui/material\";\nimport Friend from \"../../components/Friend.jsx\";\nimport WidgetWrapper from \"../../components/WidgetWrapper\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPost } from \"../../state/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostWidget = ({\n  postId,\n  name,\n  postUserId,\n  description,\n  location,\n  picturePath,\n  userPicturePath,\n  likes,\n  comments\n}) => {\n  _s();\n  const [isComments, setIsComments] = useState(false); //BOOLEAN: if user opened comments\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.token);\n  const loggedInUserId = useSelector(state => state.user._id);\n  const isLiked = Boolean(likes[loggedInUserId]); //REMINDER: on backend in models/post, we set 'likes' as an array of users with a boolean of true or false. This 'isLiked' boolean SEARCHES through the 'likes' array to find the 'loggedInUserId' boolean.\n  const likeCount = Object.keys(likes).length; //'Object.keys' is a static method --> RETURNS an array of a given object's own string-keyed property names for info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n  const {\n    palette\n  } = useTheme();\n  const main = palette.neutral.main;\n  const primary = palette.primary.main;\n  const patchLike = async () => {\n    const response = await fetch(`http://localhost:3001/posts/${postId}/like`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: loggedInUserId\n      })\n    });\n    const updatedPost = await response.json();\n    dispatch(setPost({\n      post: updatedPost\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(WidgetWrapper, {\n    m: \"2rem 0\",\n    children: [/*#__PURE__*/_jsxDEV(Friend, {\n      friendId: postUserId,\n      name: name,\n      subtitle: location,\n      userPicturePath: userPicturePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: main,\n      sx: {\n        mt: \"1rem\"\n      },\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), picturePath &&\n    /*#__PURE__*/\n    //if theres a picture in post, then we show it\n    _jsxDEV(\"img\", {\n      width: \"100%\",\n      height: \"auto\",\n      src: `http://localhost:3001/assets/${picturePath}`,\n      alt: \"post\",\n      style: {\n        borderRadius: \"0.75rem\",\n        marginTop: \"0.75rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FlexBetween, {\n      mt: \"0.25rem\",\n      children: [/*#__PURE__*/_jsxDEV(FlexBetween, {\n        gap: \"1rem\",\n        children: [/*#__PURE__*/_jsxDEV(FlexBetween, {\n          gap: \"0.3rem\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: patchLike,\n            children: isLiked ? /*#__PURE__*/_jsxDEV(FavoriteOutlined, {\n              sx: {\n                color: primary\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderOutlined, {\n              sx: {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: likeCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexBetween, {\n          gap: \"0.3rem\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setIsComments(!isComments),\n            children: /*#__PURE__*/_jsxDEV(ChatBubbleOutlineOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\" \", comments.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(ShareOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isComments && /*#__PURE__*/_jsxDEV(Box, {\n      mt: \"0.5rem\",\n      children: comments.map((comment, i) => /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: main,\n            m: \"0.5rem\",\n            pl: \"1rem\"\n          },\n          children: comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, `${name}-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PostWidget, \"IOTKyMByat0DmJlZ1a5sXZUx3zU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useTheme];\n});\n_c = PostWidget;\nexport default PostWidget;\nvar _c;\n$RefreshReg$(_c, \"PostWidget\");","map":{"version":3,"names":["FlexBetween","React","ChatBubbleOutlineOutlined","FavoriteBorderOutlined","FavoriteOutlined","ShareOutlined","Box","Divider","IconButton","Typography","useTheme","Friend","WidgetWrapper","useState","useDispatch","useSelector","setPost","jsxDEV","_jsxDEV","PostWidget","postId","name","postUserId","description","location","picturePath","userPicturePath","likes","comments","_s","isComments","setIsComments","dispatch","token","state","loggedInUserId","user","_id","isLiked","Boolean","likeCount","Object","keys","length","palette","main","neutral","primary","patchLike","response","fetch","method","headers","Authorization","body","JSON","stringify","userId","updatedPost","json","post","m","children","friendId","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","mt","width","height","src","alt","style","borderRadius","marginTop","gap","onClick","map","comment","i","pl","_c","$RefreshReg$"],"sources":["/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/PostWidget.jsx"],"sourcesContent":["import FlexBetween from \"../../components/FlexBetween\";\nimport React from \"react\";\nimport {\n  ChatBubbleOutlineOutlined,\n  FavoriteBorderOutlined,\n  FavoriteOutlined,\n  ShareOutlined,\n} from \"@mui/icons-material\";\nimport { Box, Divider, IconButton, Typography, useTheme } from \"@mui/material\";\nimport Friend from \"../../components/Friend.jsx\";\nimport WidgetWrapper from \"../../components/WidgetWrapper\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPost } from \"../../state/index\";\n\nconst PostWidget = ({\n  postId,\n  name,\n  postUserId,\n  description,\n  location,\n  picturePath,\n  userPicturePath,\n  likes,\n  comments,\n}) => {\n  const [isComments, setIsComments] = useState(false); //BOOLEAN: if user opened comments\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token);\n  const loggedInUserId = useSelector((state) => state.user._id);\n  const isLiked = Boolean(likes[loggedInUserId]); //REMINDER: on backend in models/post, we set 'likes' as an array of users with a boolean of true or false. This 'isLiked' boolean SEARCHES through the 'likes' array to find the 'loggedInUserId' boolean.\n  const likeCount = Object.keys(likes).length; //'Object.keys' is a static method --> RETURNS an array of a given object's own string-keyed property names for info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n  const { palette } = useTheme();\n  const main = palette.neutral.main;\n  const primary = palette.primary.main;\n\n  const patchLike = async () => {\n    const response = await fetch(`http://localhost:3001/posts/${postId}/like`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ userId: loggedInUserId }),\n    });\n    const updatedPost = await response.json();\n    dispatch(setPost({ post: updatedPost }));\n  };\n\n  return (\n    <WidgetWrapper m=\"2rem 0\">\n      <Friend\n        friendId={postUserId}\n        name={name}\n        subtitle={location}\n        userPicturePath={userPicturePath}\n      />\n      <Typography color={main} sx={{ mt: \"1rem\" }}>\n        {description}\n      </Typography>\n      {picturePath && ( //if theres a picture in post, then we show it\n        <img\n          width=\"100%\"\n          height=\"auto\"\n          src={`http://localhost:3001/assets/${picturePath}`}\n          alt=\"post\"\n          style={{ borderRadius: \"0.75rem\", marginTop: \"0.75rem\" }}\n        />\n      )}\n      <FlexBetween mt=\"0.25rem\">\n        <FlexBetween gap=\"1rem\">\n          <FlexBetween gap=\"0.3rem\">\n            {/* LIKES */}\n            <IconButton onClick={patchLike}>\n              {isLiked ? (\n                <FavoriteOutlined sx={{ color: primary }} />\n              ) : (\n                <FavoriteBorderOutlined sx={{}} />\n              )}\n            </IconButton>\n            <Typography>{likeCount}</Typography>\n          </FlexBetween>\n          {/* END LIKES */}\n\n          {/* COMMENTS */}\n          <FlexBetween gap=\"0.3rem\">\n            <IconButton onClick={() => setIsComments(!isComments)}>\n              <ChatBubbleOutlineOutlined />\n            </IconButton>\n            <Typography> {comments.length} </Typography>\n          </FlexBetween>\n          {/* END COMMENTS */}\n        </FlexBetween>\n\n        <IconButton>\n          <ShareOutlined />\n        </IconButton>\n      </FlexBetween>\n      {isComments && (\n        <Box mt=\"0.5rem\">\n          {comments.map((comment, i) => (\n            <Box key={`${name}-${i}`}>\n              <Divider />\n              <Typography sx={{ color: main, m: \"0.5rem\", pl: \"1rem\" }}>\n                {comment}\n              </Typography>\n              <Divider />\n            </Box>\n          ))}\n        </Box>\n      )}\n    </WidgetWrapper>\n  );\n};\n\nexport default PostWidget;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}