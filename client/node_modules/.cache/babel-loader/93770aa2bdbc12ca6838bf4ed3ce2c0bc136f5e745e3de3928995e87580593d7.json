{"ast":null,"code":"// import { Box, Typography, useTheme } from \"@mui/material\";\n// import Friend from \"../../components/Friend\";\n// import WidgetWrapper from \"../../components/WidgetWrapper\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { setFriends } from \"../../state/index\";\n\n// const FriendListWidget = ({ userId }) => {\n//   const dispatch = useDispatch();\n//   const palette = useTheme();\n//   const token = useSelector((state) => state.token);\n//   const friends = useSelector((state) => state.user.friends);\n\n//   const getFriends = async () => {\n//     const response = await fetch(\n//       `http://localhost:3001/users/${userId}/friends`,\n//       {\n//         method: \"GET\",\n//         headers: { Authorization: `Bearer ${token}` }, //authentication\n//       }\n//     );\n\n//     const data = await response.json();\n//     dispatch(setFriends({ friends: data }));\n//   };\n\n//   useEffect(() => {\n//     getFriends();\n//   }, []); //eslint-disable-line react-hooks/exhaustive-deps\n\n//   return (\n//     <WidgetWrapper>\n//       <Typography\n//         color={palette.neutral.dark}\n//         variant=\"h5\"\n//         fontWeight=\"500\"\n//         sx={{ md: \"1.5rem\" }}\n//       >\n//         <Box display=\"flex\" dlexDirection=\"column\" gap=\"1.5rem\">\n//           {friends.map((friend) => (\n//             <Friend\n//               key={friend._id}\n//               friendId={friend._id}\n//               name={`${friend.firstName} ${friend.lastName}`}\n//               subtitle={friend.occupation}\n//               userPicturePath={friend.picturePath}\n//             />\n//           ))}\n//         </Box>\n//       </Typography>\n//     </WidgetWrapper>\n//   );\n// };\n\n// export default FriendListWidget;","map":{"version":3,"names":[],"sources":["/Users/hansonliao/react101/Github/social-media-2/client/src/scenes/widgets/FriendListWidget.jsx"],"sourcesContent":["// import { Box, Typography, useTheme } from \"@mui/material\";\n// import Friend from \"../../components/Friend\";\n// import WidgetWrapper from \"../../components/WidgetWrapper\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { setFriends } from \"../../state/index\";\n\n// const FriendListWidget = ({ userId }) => {\n//   const dispatch = useDispatch();\n//   const palette = useTheme();\n//   const token = useSelector((state) => state.token);\n//   const friends = useSelector((state) => state.user.friends);\n\n//   const getFriends = async () => {\n//     const response = await fetch(\n//       `http://localhost:3001/users/${userId}/friends`,\n//       {\n//         method: \"GET\",\n//         headers: { Authorization: `Bearer ${token}` }, //authentication\n//       }\n//     );\n\n//     const data = await response.json();\n//     dispatch(setFriends({ friends: data }));\n//   };\n\n//   useEffect(() => {\n//     getFriends();\n//   }, []); //eslint-disable-line react-hooks/exhaustive-deps\n\n//   return (\n//     <WidgetWrapper>\n//       <Typography\n//         color={palette.neutral.dark}\n//         variant=\"h5\"\n//         fontWeight=\"500\"\n//         sx={{ md: \"1.5rem\" }}\n//       >\n//         <Box display=\"flex\" dlexDirection=\"column\" gap=\"1.5rem\">\n//           {friends.map((friend) => (\n//             <Friend\n//               key={friend._id}\n//               friendId={friend._id}\n//               name={`${friend.firstName} ${friend.lastName}`}\n//               subtitle={friend.occupation}\n//               userPicturePath={friend.picturePath}\n//             />\n//           ))}\n//         </Box>\n//       </Typography>\n//     </WidgetWrapper>\n//   );\n// };\n\n// export default FriendListWidget;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}